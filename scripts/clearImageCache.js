#!/usr/bin/env node

// Script para limpiar cach√© y regenerar im√°genes optimizadas
// Ejecutar con: node scripts/clearImageCache.js

const fs = require("fs");
const path = require("path");

function deleteFolderRecursive(folderPath) {
  if (fs.existsSync(folderPath)) {
    fs.readdirSync(folderPath).forEach((file) => {
      const curPath = path.join(folderPath, file);
      if (fs.lstatSync(curPath).isDirectory()) {
        deleteFolderRecursive(curPath);
      } else {
        fs.unlinkSync(curPath);
      }
    });
    fs.rmdirSync(folderPath);
  }
}

function clearImageCache() {
  console.log("üßπ Limpiando cach√© de im√°genes de Next.js...\n");

  const projectRoot = process.cwd();
  const nextFolder = path.join(projectRoot, ".next");
  const cacheFolder = path.join(nextFolder, "cache");
  const imagesCacheFolder = path.join(cacheFolder, "images");

  let cleaned = false;

  // Limpiar cach√© de im√°genes
  if (fs.existsSync(imagesCacheFolder)) {
    console.log("üìÅ Eliminando cach√© de im√°genes...");
    deleteFolderRecursive(imagesCacheFolder);
    console.log("‚úÖ Cach√© de im√°genes eliminado");
    cleaned = true;
  }

  // Limpiar toda la carpeta .next/cache si existe
  if (fs.existsSync(cacheFolder)) {
    console.log("üìÅ Eliminando cach√© completo...");
    deleteFolderRecursive(cacheFolder);
    console.log("‚úÖ Cach√© completo eliminado");
    cleaned = true;
  }

  // Eliminar archivos de build para forzar regeneraci√≥n
  const staticFolder = path.join(nextFolder, "static");
  if (fs.existsSync(staticFolder)) {
    console.log("üìÅ Eliminando archivos est√°ticos...");
    deleteFolderRecursive(staticFolder);
    console.log("‚úÖ Archivos est√°ticos eliminados");
    cleaned = true;
  }

  if (!cleaned) {
    console.log("‚ÑπÔ∏è  No se encontr√≥ cach√© para limpiar");
  }

  console.log("\nüéØ Acciones recomendadas despu√©s de limpiar:");
  console.log("1. npm run dev (para desarrollo)");
  console.log("2. npm run build (para producci√≥n)");
  console.log("3. Verificar que las im√°genes se cargan correctamente");

  console.log("\nüí° Si persisten los errores 400:");
  console.log("- Verificar las URLs de Firebase Storage");
  console.log("- Comprobar permisos de acceso a im√°genes");
  console.log("- Revisar configuraci√≥n de dominios en next.config.mjs");
}

if (require.main === module) {
  clearImageCache();
}

module.exports = { clearImageCache };
