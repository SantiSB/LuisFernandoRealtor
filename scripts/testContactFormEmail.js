// Script de prueba REAL para el formulario de Contacto General
// Este script env√≠a datos reales al endpoint /api/send para probar el env√≠o de emails
// Ejecutar desde la terminal: node scripts/testContactFormEmail.js

console.log(
  "üìß INICIANDO PRUEBAS REALES DE EMAIL - FORMULARIO DE CONTACTO GENERAL"
);
console.log("=".repeat(75));

const API_BASE_URL = "http://localhost:3000"; // Aseg√∫rate de que el servidor est√© corriendo

// Funci√≥n para hacer peticiones HTTP
async function makeRequest(url, data) {
  try {
    const response = await fetch(url, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify(data),
    });

    const result = await response.json();
    return {
      success: response.ok,
      status: response.status,
      data: result,
    };
  } catch (error) {
    return {
      success: false,
      error: error.message,
    };
  }
}

// Casos de prueba para env√≠o real de emails de contacto general
const emailTestCases = [
  {
    name: "üìß EMAIL 1: Consulta sobre aval√∫o",
    description: "Cliente solicita informaci√≥n sobre servicios de aval√∫o",
    data: {
      userType: "contact",
      nombre: "Juliana Restrepo",
      correo: "juliana.restrepo@email.com",
      telefono: "3198765432",
      asunto: "Consulta sobre aval√∫o comercial",
      mensaje:
        "Buenos d√≠as, necesito realizar un aval√∫o comercial de mi propiedad ubicada en El Poblado. Es un apartamento de 85m¬≤ en edificio de 10 a√±os. ¬øPodr√≠an enviarme informaci√≥n sobre costos y tiempos? Gracias.",
    },
  },

  {
    name: "üìß EMAIL 2: Consulta sobre inversi√≥n",
    description: "Inversionista pregunta sobre oportunidades",
    data: {
      userType: "contact",
      nombre: "Eduardo Ram√≠rez",
      correo: "eduardo.ramirez@inversiones.com",
      telefono: "3156789012",
      asunto: "Oportunidades de inversi√≥n inmobiliaria",
      mensaje:
        "Estimado Luis Fernando, soy inversionista y estoy interesado en conocer las mejores oportunidades de inversi√≥n inmobiliaria en el Valle de Aburr√°. Manejo un presupuesto de hasta 800 millones de pesos y busco propiedades con potencial de valorizaci√≥n. Me gustar√≠a agendar una cita para conversar sobre las opciones disponibles.",
    },
  },

  {
    name: "üìß EMAIL 3: Consulta sobre documentaci√≥n legal",
    description: "Cliente pregunta sobre tr√°mites y documentos",
    data: {
      userType: "contact",
      nombre: "Mar√≠a Jos√© Henao",
      correo: "mariajose.henao@email.com",
      telefono: "3007654321",
      asunto: "Documentaci√≥n necesaria para venta",
      mensaje:
        "Hola, estoy pensando en vender mi casa en Envigado y tengo algunas dudas sobre la documentaci√≥n necesaria. La propiedad est√° a mi nombre pero hay una mejora que hice sin permiso hace 5 a√±os. ¬øEsto representa alg√∫n problema? ¬øQu√© documentos necesito tener listos? Agradezco su orientaci√≥n.",
    },
  },

  {
    name: "üìß EMAIL 4: Consulta sobre financiaci√≥n",
    description: "Cliente pregunta sobre opciones de cr√©dito",
    data: {
      userType: "contact",
      nombre: "Andr√©s Felipe G√≥mez",
      correo: "andres.gomez@email.com",
      telefono: "3189012345",
      asunto: "Asesor√≠a en financiaci√≥n de vivienda",
      mensaje:
        "Buenos d√≠as Luis Fernando, trabajo como empleado hace 3 a√±os y tengo capacidad de pago para un apartamento de hasta 300 millones. Quisiera saber qu√© opciones de financiaci√≥n recomienda y si maneja alianzas con bancos. Tambi√©n me gustar√≠a conocer sobre los subsidios disponibles para primera vivienda.",
    },
  },

  {
    name: "üìß EMAIL 5: Consulta sobre administraci√≥n de propiedades",
    description: "Propietario pregunta sobre servicios de administraci√≥n",
    data: {
      userType: "contact",
      nombre: "Claudia Patricia Torres",
      correo: "claudia.torres@email.com",
      telefono: "3123456789",
      asunto: "Administraci√≥n de propiedades en alquiler",
      mensaje:
        "Estimado Luis Fernando, tengo 3 apartamentos que quiero poner en alquiler pero vivo en el exterior y necesito alguien confiable que me los administre. ¬øOfrecen este servicio? Me interesa saber sobre los costos, qu√© incluye el servicio y c√≥mo manejan la selecci√≥n de inquilinos.",
    },
  },

  {
    name: "üìß EMAIL 6: Consulta t√©cnica sobre construcci√≥n",
    description: "Cliente pregunta sobre licencias y permisos",
    data: {
      userType: "contact",
      nombre: "Ing. Carlos Ruiz",
      correo: "carlos.ruiz@construcciones.com",
      telefono: "3167890123",
      asunto: "Consulta sobre licencias de construcci√≥n",
      mensaje:
        "Buen d√≠a, compr√© un lote en Sabaneta y quiero iniciar la construcci√≥n de una casa. Necesito asesor√≠a sobre el proceso de licencias, planos, tiempos de aprobaci√≥n y costos aproximados. ¬øManejan este tipo de asesor√≠as o me pueden recomendar profesionales especializados?",
    },
  },

  {
    name: "üìß EMAIL 7: Consulta sobre permuta",
    description: "Cliente interesado en intercambio de propiedades",
    data: {
      userType: "contact",
      nombre: "Rosa Elena V√°squez",
      correo: "rosa.vasquez@email.com",
      telefono: "3145678901",
      asunto: "Posibilidad de permuta",
      mensaje:
        "Hola Luis Fernando, tengo una casa en Itag√º√≠ y me gustar√≠a cambiarla por un apartamento en Medell√≠n. La casa vale aproximadamente 350 millones y busco apartamento en zona segura, de 2-3 habitaciones. ¬øManejan este tipo de operaciones? ¬øQu√© documentaci√≥n necesitar√≠a?",
    },
  },
];

// Funci√≥n principal para ejecutar pruebas
async function runEmailTests() {
  console.log(
    `‚è≥ Iniciando ${emailTestCases.length} pruebas de env√≠o de email...\n`
  );

  let successCount = 0;
  let failureCount = 0;

  for (let i = 0; i < emailTestCases.length; i++) {
    const testCase = emailTestCases[i];
    console.log(`${testCase.name}`);
    console.log(`   Descripci√≥n: ${testCase.description}`);

    try {
      const result = await makeRequest(
        `${API_BASE_URL}/api/send`,
        testCase.data
      );

      if (result.success) {
        console.log(`   ‚úÖ EMAIL ENVIADO EXITOSAMENTE`);
        console.log(`   üìä Status: ${result.status}`);
        if (result.data.id) {
          console.log(`   üÜî Email ID: ${result.data.id}`);
        }
        successCount++;
      } else {
        console.log(`   ‚ùå ERROR AL ENVIAR EMAIL`);
        console.log(`   üìä Status: ${result.status || "Unknown"}`);
        console.log(
          `   ‚ö†Ô∏è  Error: ${result.data?.error?.message || result.error}`
        );
        failureCount++;
      }
    } catch (error) {
      console.log(`   ‚ùå EXCEPCI√ìN AL ENVIAR EMAIL`);
      console.log(`   ‚ö†Ô∏è  Error: ${error.message}`);
      failureCount++;
    }

    console.log(""); // L√≠nea en blanco

    // Pausa entre env√≠os para no saturar el servicio
    if (i < emailTestCases.length - 1) {
      console.log("‚è±Ô∏è  Esperando 2 segundos antes del siguiente env√≠o...\n");
      await new Promise((resolve) => setTimeout(resolve, 2000));
    }
  }

  // Resumen final
  console.log("=".repeat(75));
  console.log(
    "üìä RESUMEN DE PRUEBAS DE EMAIL - FORMULARIO DE CONTACTO GENERAL"
  );
  console.log(`‚úÖ Emails enviados exitosamente: ${successCount}`);
  console.log(`‚ùå Emails con error: ${failureCount}`);
  console.log(`üìä Total de pruebas: ${emailTestCases.length}`);
  console.log(
    `üéØ Porcentaje de √©xito: ${Math.round(
      (successCount / emailTestCases.length) * 100
    )}%`
  );
  console.log("=".repeat(75));

  if (failureCount > 0) {
    console.log("\n‚ö†Ô∏è  NOTAS IMPORTANTES:");
    console.log(
      "   ‚Ä¢ Verifica que el servidor de desarrollo est√© ejecut√°ndose (npm run dev)"
    );
    console.log(
      "   ‚Ä¢ Confirma que RESEND_API_KEY est√© configurada en .env.local"
    );
    console.log(
      "   ‚Ä¢ Revisa la consola del servidor para m√°s detalles de errores"
    );
  } else {
    console.log("\nüéâ ¬°TODAS LAS PRUEBAS DE EMAIL FUERON EXITOSAS!");
    console.log(
      "   üì¨ Verifica tu bandeja de entrada para confirmar la recepci√≥n"
    );
  }
}

// Verificar que Node.js tenga fetch disponible (Node 18+)
if (typeof fetch === "undefined") {
  console.error("‚ùå Error: fetch() no est√° disponible.");
  console.error("   Necesitas Node.js 18+ o instalar node-fetch");
  process.exit(1);
}

// Ejecutar las pruebas
runEmailTests().catch(console.error);
